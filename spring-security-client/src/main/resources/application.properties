server.port=8083

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/user_registration
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=foobar
spring.jpa.hibernate.ddl-auto=update

spring.security.oauth2.client.registration.articles-client-oidc.provider=spring
spring.security.oauth2.client.registration.articles-client-oidc.client-id=articles-client
spring.security.oauth2.client.registration.articles-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.articles-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.articles-client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.articles-client-oidc.scope=openid
spring.security.oauth2.client.registration.articles-client-oidc.client-name=articles-client-oidc
spring.security.oauth2.client.registration.articles-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.articles-client-authorization-code.client-id=articles-client
spring.security.oauth2.client.registration.articles-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.articles-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.articles-client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.articles-client-authorization-code.scope=articles.read
spring.security.oauth2.client.registration.articles-client-authorization-code.client-name=articles-client-authorization-code
spring.security.oauth2.client.provider.spring.issuer-uri=http://auth-server:9000


